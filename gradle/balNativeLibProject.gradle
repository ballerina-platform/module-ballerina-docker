/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"

configurations {
    balSource {
        transitive false
    }
}

task createBalo(type: JavaExec) {
    def balFiles = file("src/main/ballerina/")
    dependsOn createBalHome

    // TODO: don't depend on name ,pass this as a prop form project
    def loadBuiltinFromBalo = project.name == 'ballerina-builtin'

    main 'org.ballerinalang.stdlib.utils.GenerateBalo'
    classpath configurations.baloCreat
    args(loadBuiltinFromBalo, balFiles, "$buildDir/generated-balo/repo/ballerina", "$buildDir")

    inputs.dir(balFiles)
    inputs.files(configurations.baloImplementation)
    outputs.dir("$buildDir/generated-balo")
    outputs.cacheIf { true }
}

artifacts.add('baloImplementation', file("$buildDir/generated-balo/")) {
    builtBy('createBalo')
}

artifacts.add('balSource', file("src/main/ballerina/"))