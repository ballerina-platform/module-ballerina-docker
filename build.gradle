/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 

plugins {
  id "com.github.spotbugs" version "1.6.10"
}

ext.ballerinaLangVersion = '1.3.0-SNAPSHOT'
ext.ballerinaSourceDirectory = "$buildDir/../src/main/ballerina"
ext.commonsCodecVersion = "1.12"
ext.commonIoVersion = "2.6"
ext.dockerJavaVersion = "3.1.5"
ext.projectBuildSourceEncoding = "UTF-8"
ext.projectReportingOutputEncoding = "UTF-8"
ext.slf4jVersion = "1.7.26"
ext.testngVersion = "6.14.3"
ext.lombokVersion = "1.18.10"

allprojects {
    group = 'org.ballerinax.docker'
    version = '1.3.0-SNAPSHOT'

	apply plugin: 'jacoco'
}

subprojects {
	apply plugin: 'java'
    apply plugin: 'maven-publish'
	
    test{
        jacoco {
            enabled = true
            destinationFile = file("$buildDir/coverage-reports/jacoco.exec")
            includeNoLocationClasses = true
        }
    }
		
    repositories {
        mavenLocal()
        maven {
            url = 'http://maven.wso2.org/nexus/content/repositories/releases/'
        }

        maven {
            url = 'http://maven.wso2.org/nexus/content/repositories/snapshots/'
        }

        maven {
            url = 'http://maven.wso2.org/nexus/content/groups/wso2-public/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/orgballerinalang-1509'
        }

        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }
    }

    sourceCompatibility = '1.8'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId project.name
                version = project.version
            }
        }
        repositories {
            maven {
                if(project.version.endsWith('-SNAPSHOT')) {
                    url "https://maven.wso2.org/nexus/content/repositories/snapshots/"
                } else {
                    url "https://maven.wso2.org/nexus/service/local/staging/deploy/maven2/"
                }
                credentials {
                    username System.getenv("NEXUS_USERNAME")
                    password System.getenv("NEXUS_PASSWORD")
                }
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
